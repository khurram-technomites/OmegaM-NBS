@model NowBuySell.Data.Brand

@{
	ViewBag.Title = "Edit";
	Layout = null;
}

<div class="modal-header">
	<h5 class="modal-title">Update</h5>
	<button type="button" class="close" data-dismiss="modal" aria-label="Close">
		<i aria-hidden="true" class="ki ki-close"></i>
	</button>
</div>
<div class="modal-body">

	@using (Html.BeginForm("Edit", "Brands", new { area = "Admin" }, FormMethod.Post, new { id = "frm-edit" }))
	{
		@Html.AntiForgeryToken()
		<div class="alert alert-danger text-center" id="divMessage" style="display:none"></div>
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.ID)
		<div class="form-group row">
			<div class="col-lg-12 text-center">
				<div class="image-input image-input-outline" id="kt_image_1">
					<div class="image-input-wrapper" style="background-image: url('@Model.Logo.Replace("~","")')"></div>
					<label class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow" data-action="change" data-toggle="tooltip" title="" data-original-title="Change logo">
						<i class="fa fa-pen icon-sm text-muted"></i>
						<input type="file" name="Image" id="Image" accept=".png, .jpg, .jpeg" />
						<input type="hidden" name="profile_avatar_remove" />
					</label>
					<span class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow cancelimage" data-action="cancel" data-toggle="tooltip" title="Cancel avatar">
						<i class="ki ki-bold-close icon-xs text-muted"></i>
					</span>
				</div>
				<span class="form-text text-muted">Image dimensions should be 143 x 73 pixels and Image size must be less than 20 kb</span>
			</div>
		</div>
        <div class="row">
            <div class="col-md-6 col-sm-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, "Brand Name", htmlAttributes: new { @class = "control-label" })
                    <div class="input-group mb-2">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", id = "Name", placeholder = "Enter brand name here ...", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        <div class="input-group-append"><span class="input-group-text"><i class="fa fa-server"></i></span></div>
                    </div>
                </div>
            </div>
            <input type="text" class="" value="-" name="NameAr" hidden="" />
            @*<div class="col-md-6 col-sm-12">
            <div class="form-group">
                @Html.LabelFor(model => model.NameAr, "Brand Name (Ar)", htmlAttributes: new { @class = "control-label" })
                <div class="input-group mb-2">
                    @Html.EditorFor(model => model.NameAr, new { htmlAttributes = new { @class = "form-control", id = "NameAr", placeholder = "Enter brand name (ar) here ...", required = "required", dir = "rtl" } })
                    @Html.ValidationMessageFor(model => model.NameAr, "", new { @class = "text-danger" })
                    <div class="input-group-append"><span class="input-group-text"><i class="fa fa-server"></i></span></div>
                </div>
            </div>
        </div>*@
            @*</div>
        <div class="row">*@
            <div class="col-md-6 col-sm-12">
                <div class="form-group">
                    <label class="control-label">Slug</label>
                    <div class="input-group mb-2">
                        @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control", id = "Slug", placeholder = "Enter brand name here ...", required = "required", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
                        <div class="input-group-append">
                            <span class="input-group-text">
                                <i class="fa fa-server"></i>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
	}
</div>
<div class="modal-footer">
	<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
	<button type="submit" class="btn btn-info" form="frm-edit">Save Changes</button>
</div>

<script>
    var _URL = window.URL || window.webkitURL;

	$(document).ready(function () {

		//Image Validation Begin
        $("#Image").change(function (e) {

            var file, img;
            if ((file = this.files[0])) {
                img = new Image();
                img.onload = function () {
                    if (this.width < 143 || this.width > 143) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Image dimension should be 143 x 73!',
                        }).then(function (result) {
                            $("#Image").attr("src", "/Assets/AppFiles/Images/default.png");
                            $(".cancelimage").trigger('click');
                        });
                    }
                    else if (this.height < 73 || this.height > 73) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Image dimension should be 143 x 73!',
                        }).then(function (result) {
                            $("#Image").attr("src", "/Assets/AppFiles/Images/default.png");
                            $(".cancelimage").trigger('click');
                        });
                    }
                    else {
                        img.onerror = function () {
                            alert("not a valid file: " + file.type);
                        };
                    }
                };
                img.src = _URL.createObjectURL(file);
            }
		});
		//Image Validation Begin

		var avatar1 = new KTImageInput('kt_image_1');

		$("#frm-edit").submit(function () {

			$(this).closest('.modal').find('button[type=submit]').addClass('spinner spinner-sm spinner-left').attr('disabled', true);

			var data = new FormData();
			var files = $("#Image").get(0).files;
			if (files.length > 0) {
				data.append("Image", files[0]);
			}
			data.append("id", $('#ID').val());

			data.append("Name", $('#Name').val());
			data.append("NameAr", $('#NameAr').val());
			data.append("Slug", $('#Slug').val());

			data.append("__RequestVerificationToken", $('input[name=__RequestVerificationToken]').val());
			$.ajax({
				url: "/Admin/Brands/Edit/",
				type: "POST",
				processData: false,
				contentType: false,
				data: data,
				success: function (response) {

					if (callback) {
						callback($('#myModalContent'), element, true, response);
					}
				},
				error: function (er) {
					toastr.error(er);
				}
			});
			return false;
		});

        $("#Name").on('change', function () {
			var name = $(this);
			$("#Slug").val($(name).val().replace(/ /g, "-").toLocaleLowerCase());
		});
	});
</script>