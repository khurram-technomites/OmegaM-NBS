@model IEnumerable<NowBuySell.Data.Property>

@{
    ViewBag.Title = "List";
    Layout = null;
}
<style>
    #kt_datatable1 tbody tr td:last-child {
        white-space: nowrap;
    }
</style>
<!--begin::Row-->
<div class="row">
    <div class="col-xl-12">
        <!--begin::Card-->
        <div class="card card-custom gutter-b">
            <div class="card-header flex-wrap border-0 pt-6 pb-0">
                <div class="card-title">
                    <h3 class="card-label">
                        Property Approvals
                        <span class="d-block text-muted pt-2 font-size-sm">Manage Approvals Here...</span>
                    </h3>
                </div>

                @*<div class="dropdown dropdown-inline mr-2">
                        @using (Html.BeginForm("ApprovalReport", "Property", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()

                            <button type="submit" class="btn btn-dark btn-sm @(Model.Count() > 0 ? "" : "disabled")">
                                <i class="far fa-file-excel"></i>
                                Export Excel
                            </button>
                        }
                    </div>*@
                <div class="card-toolbar">
                    <div class="dropdown dropdown-inline mr-2">
                        <button id="approveall" class="btn btn-outline-success btn-sm mr-1 btn_approveall">
                            <i class="fa fa-check-circle"></i>Approve All
                        </button>
                    </div>

                    <div class="dropdown dropdown-inline mr-2">
                        <button id="rejectall" class="btn btn-outline-danger btn-sm mr-1 btn_rejectall">
                            <i class="fa fa-times-circle"></i>Reject All
                        </button>
                    </div>
                    <div class="dropdown dropdown-inline mr-2">
                        @Html.DropDownList("Vendor", new SelectList(ViewBag.Vendor, "Value", "Text"), "All Vendor", htmlAttributes: new { @class = "form-control", id = "vendordropdown", onchange = "Filterlist()" })

                    </div>
                    <div class="dropdown dropdown-inline mr-2">
                        <button type="button" class="btn btn-outline-secondary" id="dropdownMenu2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16">
                                <path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"></path>
                            </svg>
                        </button>
                        <div class="dropdown-menu" aria-labelledby="dropdownMenu2">
                            <form action="/Admin/Property/ApprovalReport" method="post">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="dropdown-item@(Model.Count() > 0 ? "" : "disabled")">
                                    <i class="far fa-file-excel" style="margin-right: 4px;"></i>
                                    Export Excel
                                </button>
                            </form>

                        </div>
                    </div>
                    <div>
                    </div>
                </div>
            </div>
            <div class="card-body" id="checks">
                @Html.AntiForgeryToken()
                <!--begin: Datatable-->
                <table class="table table-separate table-head-custom table-checkable" id="kt_datatable1">
                    <thead>
                        <tr>
                            <th hidden>ID</th>
                            <th>
                                <label class="checkbox checkbox-lg checkbox-inline">
                                    <input type="checkbox" id="checkAll" name="checkAll">
                                    <span></span>
                                </label>
                            </th>
                            <th>Date</th>
                            <th>Property</th>
                            <th>Status</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody style="display:none">
                        @*foreach (var item in Model)
                            {
                                <tr>
                                    <td>@item.ID</td>
                                    <td>@item.IsPublished</td>
                                    <td data-order="@item.ID">@(item.CreatedOn.ToString("dd MMM yyyy, h:mm tt"))</td>
                                    <td>@item.Thumbnail,@item.Title,@item.Vendor.Name,@item.Address</td>
                                    @*<td>@item.Thumbnail,@item.Title,@item.Address</td>
                                    <td>@item.ApprovalStatusID</td>
                                    <td></td>
                                </tr>
                            }*@
                    </tbody>
                </table>
                <!--end: Datatable-->
            </div>
        </div>
        <!--end::Card-->
    </div>
</div>
<!--end::Row-->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>


<script>

    $(document).ready(function () {

        $(".btn_approveall").prop("disabled", true);
		$(".btn_rejectall").prop("disabled", true);


        $(".Checkbox").change(function () {
            
            var chk = $('.Checkbox:checked').length;
            if (chk > 0) {
                
                $(".btnapprove").hide();
                $(".btn_approveall").prop("disabled", false);
                $(".btn_rejectall").prop("disabled", false);
            }
            else {
                
                $(".btn_approveall").prop("disabled", true);
				$(".btn_rejectall").prop("disabled", true);
                $(".btnapprove").show();
            }
        });
        $('[name="cbox[]"]:checked').length;

    });
   @* $("#checkAll").click(function () {

        $('.Checkbox').not(this).prop('checked', this.checked);
        $(".btn_approveall").prop("disabled", false);
        $(".btn_rejectall").prop("disabled", false);
        $(".btnapprove").toggle("disabled");
        var chk = $(".Checkbox:checked").length;
        if (chk > 0) {
            $(".btnapprove").hide();
            $(".btn_approveall").prop("disabled", false);
            $(".btn_rejectall").prop("disabled", false);
        }
        else {
            $(".btn_approveall").prop("disabled", true);
            $(".btn_rejectall").prop("disabled", true);
            $(".btnapprove").show();
        }

    });*@

    $("#checkAll").change(function () {
        PropertySelection = []
        if (this.checked) {
            
            $('tbody input[type=checkbox]').each(function () {
                
                this.checked = true
                var check = PropertySelection.push(this.value);
                $(".btnapprove").hide();
                $(".btn_approveall").prop("disabled", false);
                $(".btn_rejectall").prop("disabled", false);
                console.log("Selection", check);
            });
            
            $(".btn-bulk-publish").html(`<i class="fa fa-check-circle"></i> Send For Approval (${PropertySelection.ids})`);
        } else {
            $('tbody input[type=checkbox]').each(function () {
                
                this.checked = false
                var index = PropertySelection.indexOf(this.value)
                PropertySelection.splice(index, 1)
                $(".btn_approveall").prop("disabled", true);
                $(".btn_rejectall").prop("disabled", true);
                $(".btnapprove").show();
            });
            $(".btn-bulk-publish").html(`<i class="fa fa-check-circle"></i> Send For Approval (${PropertySelection.ids})`);
        }
    });
    $("#approveall").click(function () {
        $('#approveall').addClass('spinner spinner-sm spinner-left').attr('disabled', true);
        var yourArray = [];
        $("input:checkbox[name=select_specialist]:checked").each(function () {
            yourArray.push($(this).val());
        });

        $.ajax({
            url: '/Admin/Property/ApproveAll',
            type: 'POST',
            data: { 'ids': PropertySelection },
            success: function (response) {
                if (response.success) {
                    toastr.options = {
                        "positionClass": "toast-bottom-right",
                    };
                    toastr.success('Approval Accepted ...');
                    window.setTimeout(function () { location.reload() }, 2000)
                }
                else {
                    $('#approveall').removeClass('spinner spinner-sm spinner-left').attr('disabled', false);
                }
            },
            error: function (response) {
                $('#approveall').removeClass('spinner spinner-sm spinner-left').attr('disabled', false);
            }
        });
    });
    $("#rejectall").click(function () {
        $('#rejectall').addClass('spinner spinner-sm spinner-left').attr('disabled', true);
        var yourArray = [];
        $("input:checkbox[name=select_specialist]:checked").each(function () {
            yourArray.push($(this).val());
        });
        console.log(yourArray);
        $.ajax({
            url: '/Admin/Property/RejectAll',
            type: 'POST',
            data: { 'ids': PropertySelection },
            success: function (response) {
                if (response.success) {
                    toastr.options = {
                        "positionClass": "toast-bottom-right",
                    };
                    toastr.success('Properties rejected successfully... ');
                    //window.location.href = "/Admin/Property/Index";
                    window.setTimeout(function () { location.reload() }, 2000)

                }
            },
            error: function (response) {
                $('#rejectall').removeClass('spinner spinner-sm spinner-left').attr('disabled', false);
            }
        });
    });


</script>
