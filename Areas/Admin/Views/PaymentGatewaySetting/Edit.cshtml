@model NowBuySell.Data.PaymentGatewaySetting
@{
	ViewBag.Title = "Edit";
	Layout = null;
}

<div class="modal-header">
	<h5 class="modal-title">Update</h5>
	<button type="button" class="close" data-dismiss="modal" aria-label="Close">
		<i aria-hidden="true" class="ki ki-close"></i>
	</button>
</div>
<div class="modal-body">

	@using (Html.BeginForm("Edit", "PaymentGatewaySetting", new { area = "Admin" }, FormMethod.Post, new { id = "frm-edit", @class = "form" }))
	{
		@Html.AntiForgeryToken()
		<div class="alert alert-danger text-center" id="divMessage" style="display:none"></div>
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.ID)
		
		<div class="row">
			<div class="col-md-6 col-sm-12"><div class="form-group"><label class="control-label">Debug</label><div class="input-group mb-2">@Html.EditorFor(model => model.Debug, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Debug here ...", required = "required" }})@Html.ValidationMessageFor(model => model.Debug, "", new { @class = "text-danger" })<div class="input-group-append"><span class="input-group-text"><i class="fa fa-tag"></i></span></div></div></div></div><div class="col-md-6 col-sm-12"><div class="form-group"><label class="control-label">UseSSL</label><div class="input-group mb-2">@Html.EditorFor(model => model.UseSSL, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter UseSSL here ...", required = "required" }})@Html.ValidationMessageFor(model => model.UseSSL, "", new { @class = "text-danger" })<div class="input-group-append"><span class="input-group-text"><i class="fa fa-tag"></i></span></div></div></div></div><div class="col-md-6 col-sm-12"><div class="form-group"><label class="control-label">IgnoreSSLError</label><div class="input-group mb-2">@Html.EditorFor(model => model.IgnoreSSLError, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter IgnoreSSLError here ...", required = "required" }})@Html.ValidationMessageFor(model => model.IgnoreSSLError, "", new { @class = "text-danger" })<div class="input-group-append"><span class="input-group-text"><i class="fa fa-tag"></i></span></div></div></div></div><div class="col-md-6 col-sm-12"><div class="form-group"><label class="control-label">GatewayHost</label><div class="input-group mb-2">@Html.EditorFor(model => model.GatewayHost, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter GatewayHost here ...", required = "required" }})@Html.ValidationMessageFor(model => model.GatewayHost, "", new { @class = "text-danger" })<div class="input-group-append"><span class="input-group-text"><i class="fa fa-tag"></i></span></div></div></div></div><div class="col-md-6 col-sm-12"><div class="form-group"><label class="control-label">Version</label><div class="input-group mb-2">@Html.EditorFor(model => model.Version, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Version here ...", required = "required" }})@Html.ValidationMessageFor(model => model.Version, "", new { @class = "text-danger" })<div class="input-group-append"><span class="input-group-text"><i class="fa fa-tag"></i></span></div></div></div></div><div class="col-md-6 col-sm-12"><div class="form-group"><label class="control-label">GatewayUrl</label><div class="input-group mb-2">@Html.EditorFor(model => model.GatewayUrl, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter GatewayUrl here ...", required = "required" }})@Html.ValidationMessageFor(model => model.GatewayUrl, "", new { @class = "text-danger" })<div class="input-group-append"><span class="input-group-text"><i class="fa fa-tag"></i></span></div></div></div></div><div class="col-md-6 col-sm-12"><div class="form-group"><label class="control-label">UseProxy</label><div class="input-group mb-2">@Html.EditorFor(model => model.UseProxy, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter UseProxy here ...", required = "required" }})@Html.ValidationMessageFor(model => model.UseProxy, "", new { @class = "text-danger" })<div class="input-group-append"><span class="input-group-text"><i class="fa fa-tag"></i></span></div></div></div></div><div class="col-md-6 col-sm-12"><div class="form-group"><label class="control-label">ProxyHost</label><div class="input-group mb-2">@Html.EditorFor(model => model.ProxyHost, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter ProxyHost here ...", required = "required" }})@Html.ValidationMessageFor(model => model.ProxyHost, "", new { @class = "text-danger" })<div class="input-group-append"><span class="input-group-text"><i class="fa fa-tag"></i></span></div></div></div></div><div class="col-md-6 col-sm-12"><div class="form-group"><label class="control-label">ProxyUser</label><div class="input-group mb-2">@Html.EditorFor(model => model.ProxyUser, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter ProxyUser here ...", required = "required" }})@Html.ValidationMessageFor(model => model.ProxyUser, "", new { @class = "text-danger" })<div class="input-group-append"><span class="input-group-text"><i class="fa fa-tag"></i></span></div></div></div></div><div class="col-md-6 col-sm-12"><div class="form-group"><label class="control-label">ProxyPassword</label><div class="input-group mb-2">@Html.EditorFor(model => model.ProxyPassword, new { htmlAttributes = new { @class = "form-control", type="password",placeholder = "Enter ProxyPassword here ...", required = "required" }})@Html.ValidationMessageFor(model => model.ProxyPassword, "", new { @class = "text-danger" })<div class="input-group-append"><span class="input-group-text"><i class="fa fa-tag"></i></span></div></div></div></div><div class="col-md-6 col-sm-12"><div class="form-group"><label class="control-label">ProxyDomain</label><div class="input-group mb-2">@Html.EditorFor(model => model.ProxyDomain, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter ProxyDomain here ...", required = "required" }})@Html.ValidationMessageFor(model => model.ProxyDomain, "", new { @class = "text-danger" })<div class="input-group-append"><span class="input-group-text"><i class="fa fa-tag"></i></span></div></div></div></div><div class="col-md-6 col-sm-12"><div class="form-group"><label class="control-label">MerchantID</label><div class="input-group mb-2">@Html.EditorFor(model => model.MerchantID, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter MerchantID here ...", required = "required" }})@Html.ValidationMessageFor(model => model.MerchantID, "", new { @class = "text-danger" })<div class="input-group-append"><span class="input-group-text"><i class="fa fa-tag"></i></span></div></div></div></div><div class="col-md-6 col-sm-12"><div class="form-group"><label class="control-label">Password</label><div class="input-group mb-2">@Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type="password",placeholder = "Enter Password here ...", required = "required" }})@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })<div class="input-group-append"><span class="input-group-text"><i class="fa fa-tag"></i></span></div></div></div></div><div class="col-md-6 col-sm-12"><div class="form-group"><label class="control-label">UserName</label><div class="input-group mb-2">@Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter UserName here ...", required = "required" }})@Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })<div class="input-group-append"><span class="input-group-text"><i class="fa fa-tag"></i></span></div></div></div></div><div class="col-md-6 col-sm-12"><div class="form-group"><label class="control-label">Currency</label><div class="input-group mb-2">@Html.EditorFor(model => model.Currency, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Currency here ...", required = "required" }})@Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })<div class="input-group-append"><span class="input-group-text"><i class="fa fa-tag"></i></span></div></div></div></div>
		</div>
	}
</div>
<div class="modal-footer">
	<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
	<button type="submit" class="btn btn-info" form="frm-edit">Save Changes</button>
</div>
