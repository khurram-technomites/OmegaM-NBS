@model NowBuySell.Data.Order
@{
	Layout = null;
}
<style>
	#txtstatus option:disabled {
		background-color: #80808078;
	}
</style>

<div class="modal-header">
	<h5 class="modal-title">Order Status</h5>
	<button type="button" class="close" data-dismiss="modal" aria-label="Close">
		<i aria-hidden="true" class="ki ki-close"></i>
	</button>
</div>
<div class="modal-body">
	<form id="kt_login_signin_form">
		@Html.AntiForgeryToken()
		<div class="row mt-2">
			<div class="col-md-12">
				<h6>Verify with your admin credentials to unlock the previously locked statuses</h6>
			</div>
			<div class="col-md-6">
				<div class="form-group">
					<input class="form-control rounded-pill" required type="email" placeholder="Email" name="EmailAddress" autocomplete="off" />
				</div>
			</div>
			<div class="col-md-6">
				<div class="form-group">
					<input class="form-control rounded-pill" required type="password" placeholder="Password" name="Password" />
				</div>
			</div>
		</div>
		<div class="form-group text-right">
			<button id="kt_login_signin_submit" class="btn btn-info font-weight-bold px-15 py-3">Verify</button>
		</div>
	</form>

	@using (Html.BeginForm("StatusChange", "Order", new { area = "Admin" }, FormMethod.Post, new { id = "Userform", @class = "form" }))
	{
		@Html.AntiForgeryToken()
		<div class="row">
			<div class="col-md-12">
				<label class="control-label">Status</label>
				@Html.HiddenFor(Model => Model.ID)
				@*@Html.HiddenFor(Model => Model.Status)*@
				<select class="col-sm-12 form-control" name="Status" id="txtstatus">
					<option value="Pending">Pending</option>
					<option value="Confirmed">Confirmed</option>
					<option value="Processing">Processing</option>
					<option value="Completed">Completed</option>
					<option value="Canceled">Canceled</option>
				</select>
			</div>
		</div>
	}


</div>
<div class="modal-footer">
	<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
	<button type="submit" class="btn btn-info" form="Userform">Submit</button>
</div>
<script>
	$(document).ready(function () {
		$("#txtstatus").val("@Model.Status");

		var IsContinue = true;
		$('select[name=Status]').find('option').each(function (k, v) {

			if ($(v).prop('selected')) {
				IsContinue = false;
			}
			if (IsContinue && $(v).val() != "Canceled") {
				$(v).prop('disabled', true);
			}
		});

		$('#kt_login_signin_form').submit(function () {
			$('#kt_login_signin_submit').addClass('spinner spinner-sm spinner-left').attr('disabled', true);
			$.ajax({
				url: '/Admin/Account/Login',
				type: 'Post',
				data: $('#kt_login_signin_form').serialize(),
				success: function (response) {
					if (response.success == true) {
						$('#kt_login_signin_form').remove();

						$('select[name=Status]').find('option').each(function (k, v) {
							$(v).prop('disabled', false);
						});

					} else {
						showErrorMsg($('#kt_login_signin_form'), 'danger', response.message);
						$('#kt_login_signin_submit').removeClass('spinner spinner-sm spinner-left').attr('disabled', false);
					}
				}
			});
			return false;
		});
	});

	var showErrorMsg = function (form, type, msg) {
		var alert = $('<div class="kt-alert kt-alert--outline alert alert-' + type + ' alert-dismissible" role="alert">\
			<button type="button" class="close" data-dismiss="alert" aria-label="Close"></button>\
			<span></span>\
		</div>');

		form.find('.alert').remove();
		alert.prependTo(form);
		//alert.animateClass('fadeIn animated');
		KTUtil.animateClass(alert[0], 'fadeIn animated');
		alert.find('span').html(msg);
	}
</script>

