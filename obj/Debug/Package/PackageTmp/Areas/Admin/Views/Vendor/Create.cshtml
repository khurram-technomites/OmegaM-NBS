@model NowBuySell.Web.ViewModels.Vendor.VendorFormViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<link href="~/Assets/Admin/plugins/Cropper/cropper.css" rel="stylesheet" />
<link href="~/Assets/Admin/css/general/ImageUploader.css" rel="stylesheet" />
<style>
    div.pac-container {
        /*for search locaton on map model popup txtaddress*/
        z-index: 99999999999 !important;
    }

    .wo-right-icon {
        position: absolute;
        top: 30px;
        font-size: 12px;
        color: #0989b8;
        font-weight: 900;
    }

        .wo-right-icon:hover {
            color: #0989b8;
        }

    .pin-on-map {
        right: 50px;
        padding-right: 5px;
        border-right: 1px solid rgb(9 137 184 / 5%);
    }

    .get-current-location {
        top: 25px;
        right: 30px;
    }

        .get-current-location i {
            color: #0989b8;
        }
    /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
    #map {
        height: 100%;
    }
</style>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
<!--begin::Content-->
<div class="content d-flex flex-column flex-column-fluid" id="kt_content">
    <!--begin::Subheader-->
    <div class="subheader py-2 py-lg-12 subheader-transparent" id="kt_subheader">
        <div class="container d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
            <!--begin::Info-->
            <div class="d-flex align-items-center flex-wrap mr-1">
                <!--begin::Heading-->
                <div class="d-flex flex-column">

                    <!--begin::Breadcrumb-->
                    <div class="d-flex align-items-center font-weight-bold my-2">
                        <!--begin::Item-->
                        <a href="/Admin/Dashboard/Index" class="opacity-75 hover-opacity-100">
                            <i class="flaticon2-shelter text-white icon-1x"></i>
                        </a>
                        <!--end::Item-->
                        <!--begin::Item-->
                        <a href="/Admin/Dashboard/Index" class="text-white text-hover-white opacity-75 hover-opacity-100">&nbsp;&nbsp;Dashboard</a>
                        <!--end::Item-->
                        <!--begin::Item-->
                        <span class="label label-dot label-sm bg-white opacity-75 mx-3"></span>
                        <a href="/Admin/Vendor/Index" class="text-white text-hover-white opacity-75 hover-opacity-100">Vendors</a>
                        <span class="label label-dot label-sm bg-white opacity-75 mx-3"></span>
                        <a href="javascript:;" class="text-white text-hover-white opacity-75 hover-opacity-100">Create</a>
                        <!--end::Item-->
                    </div>
                    <!--end::Breadcrumb-->
                </div>
                <!--end::Heading-->
            </div>
            <!--end::Info-->
        </div>
    </div>
    <!--end::Subheader-->
    <!--begin::Entry-->
    <div class="d-flex flex-column-fluid">
        <!--begin::Container-->
        <div class="container">
            <!--begin::Dashboard-->
            <!--begin::Card-->
            <div class="card card-custom" id="kt_page_sticky_card">
                <div class="card-header">
                    <div class="card-title">
                        <h3 class="card-label">
                            Vendor
                            <span class="d-block text-muted pt-2 font-size-sm">Create Vendor Here...</span>
                        </h3>
                    </div>
                    <div class="card-toolbar">
                        <a href="/Admin/Vendor/Index" class="btn btn-light-primary font-weight-bolder mr-2">
                            <i class="ki ki-long-arrow-back icon-sm"></i>Back
                        </a>
                        <div class="btn-group">
                            <button type="submit" class="btn btn-info font-weight-bolder" form="Userform" id="btnSave">
                                <i class="ki ki-check icon-sm"></i>Save
                            </button>
                        </div>
                    </div>

                </div>
                <div class="card-body">
                    <form action="/Admin/Vendor/Create" enctype="multipart/form-data" id="Userform" method="post">
                        @Html.AntiForgeryToken()
                        <div class="alert alert-danger text-center" id="divMessage" style="display:none"></div>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @*<div class="form-group row">
            <div class="col-lg-12 text-center">
                <div class="image-input image-input-outline" id="kt_image_1">
                    <div class="image-input-wrapper" style="background-image: url('../../../../Assets/AppFiles/Images/Vendors/vendor-default-logo.png'); background-repeat: round;"></div>
                    <label class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow" data-action="change" data-toggle="tooltip" title="" data-original-title="Change Logo">
                        <i class="fa fa-pen icon-sm text-muted"></i>
                        <input type="file" name="Logo" id="Logo" accept=".png, .jpg, .jpeg" />
                        <input type="hidden" name="profile_avatar_remove" />
                    </label>
                    <span class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow cancelimage" data-action="cancel" data-toggle="tooltip" title="Cancel avatar">
                        <i class="ki ki-bold-close icon-xs text-muted"></i>
                    </span>
                </div>
                <span class="form-text text-muted">Image dimensions should be 690 x 460 pixels and Image size must be less than 50 kb</span>
            </div>
        </div>*@
                        <div class="row">
                            <div class="col-md-12 mb-3" style=" display: flex; justify-content: center; align-items: center;">
                                <div class="image-upload empty">
                                    <i class="fa fa-camera"></i>
                                    <span>Upload Image</span>
                                    <input type="file" name="Logo" id="Logo" class="logo" accept=".png, .jpg, .jpeg" style="width:1px !important;height:1px !important" />
                                    <img id="PreviewImage" src='' />
                                    @*<i class="fa fa-trash"></i>*@
                                    <i class="fa fa-pen"></i>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4 col-sm-12">
                                <div class="form-group">
                                    <label class="control-label">Vendor Code</label>
                                    <div class="input-group mb-2">
                                        <input type="text" class="form-control" name="VendorCode" id="VendorCode" value="@ViewBag.VendorCode" readonly required />
                                    </div>
                                    @Html.ValidationMessageFor(model => model.VendorCode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4 col-sm-12">
                                <div class="form-group">
                                    <label class="control-label">Legal Name as per Trade Licence</label>
                                    <div class="input-group mb-2">
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter vendor name here ...", required = "required" } })

                                    </div>
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4 col-sm-12">
                                <div class="form-group">
                                    <label class="control-label">Email</label>
                                    <div class="input-group mb-2">
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter email here ...", required = "required", type = "email" } })
                                        <div class="input-group-append"><span class="input-group-text"><i class="fa fa-envelope"></i></span></div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            @*<div class="col-md-5 col-sm-12">
                <div class="form-group">
                    <label class="control-label">Vendor Name (Ar)</label>
                    <div class="input-group mb-2">
                        @Html.EditorFor(model => model.NameAr, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter vendor name (ar) here ...", required = "required", dir = "rtl" } })

                    </div>
                    @Html.ValidationMessageFor(model => model.NameAr, "", new { @class = "text-danger" })
                </div>
            </div>*@
                            <input type="text" class="" value="-" name="NameAr" hidden="" />


                            <div class="col-md-4 col-sm-12">
                                <div class="form-group">
                                    <label class="control-label">Slug</label>
                                    <div class="input-group mb-2">
                                        @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter slug here ...", required = "required", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
                                        <div class="input-group-append">
                                            <span class="input-group-text">
                                                <i class="fa fa-link"></i>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>


                            <div class="col-md-4 col-sm-12">
                                <div class="form-group">
                                    <label class="control-label">Landline Number</label>
                                    <div class="input-group mb-2">
                                        <div class="input-group-append"><span class="input-group-text">+971</span></div>
                                        @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter contact here ...", required = "required", type = "number", min = 0 } })
                                        <div class="input-group-append"><span class="input-group-text"><i class="fa fa-phone"></i></span></div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4 col-sm-12">
                                <div class="form-group">
                                    <label class="control-label">Phone Number</label>
                                    <div class="input-group mb-2">
                                        <div class="input-group-append"><span class="input-group-text">+971</span></div>
                                        @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter mobile here ...", required = "required", type = "number", min = 0 } })
                                        <div class="input-group-append"><span class="input-group-text"><i class="fa fa-mobile"></i></span></div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-4 col-sm-12">
                                <div class="form-group">
                                    <label class="control-label">Website Address</label>
                                    <div class="input-group mb-2">
                                        @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter website address here ...", required = "required" } })
                                        <div class="input-group-append"><span class="input-group-text"><i class="fa fa-globe"></i></span></div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            @*<div class="col-md-4 col-sm-12">
                <div class="form-group">
                    <label class="control-label">Commission</label>
                    <div class="input-group mb-2">
                        @Html.EditorFor(model => model.Commission, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Commission here ...", step = ".01", required = "required", min = 0, oninput = "this.value =!!this.value && Math.abs(this.value) >= 0 ? Math.abs(this.value) : null" } })
                        <div class="input-group-append"><span class="input-group-text"><i class="fa fa-hashtag"></i></span></div>
                    </div>
                    @Html.ValidationMessageFor(model => model.Commission, "", new { @class = "text-danger" })
                </div>
            </div>*@

                            <div class="col-md-4 col-sm-12">
                                <div class="form-group">
                                    <label class="control-label">Emirates ID</label>
                                    <div class="input-group mb-2">
                                        @Html.EditorFor(model => model.IDNo, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter id no here ...", required = "required", min = 0 } })
                                        <div class="input-group-append"><span class="input-group-text"><i class="fa fa-hashtag"></i></span></div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.IDNo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4 col-sm-12">
                                <div class="form-group">
                                    <label class="control-label">TRN</label>
                                    <div class="input-group mb-2">
                                        @Html.EditorFor(model => model.TRN, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter TRN here ...", required = "required", min = 0, oninput = "this.value =!!this.value && Math.abs(this.value) >= 0 ? Math.abs(this.value) : null" } })
                                        <div class="input-group-append"><span class="input-group-text"><i class="fa fa-hashtag"></i></span></div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.TRN, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4 col-sm-12">
                                <div class="form-group">
                                    <label class="control-label">License / Permit Number</label>
                                    <div class="input-group mb-2">
                                        @Html.EditorFor(model => model.License, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter license here ...", required = "required", min = 0, oninput = "this.value =!!this.value && Math.abs(this.value) >= 0 ? Math.abs(this.value) : null" } })
                                        <div class="input-group-append"><span class="input-group-text"><i class="fa fa-file-invoice"></i></span></div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.License, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4 col-sm-12">
                                <div class="form-group">
                                    <label class="control-label">Passport Number</label>
                                    <div class="input-group mb-2">
                                        @Html.EditorFor(model => model.PassportNo, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter passport no here ...", required = "required", min = 0 } })
                                        <div class="input-group-append"><span class="input-group-text"><i class="fa fa-fax"></i></span></div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.PassportNo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4 col-sm-12">
                                <div class="form-group">
                                    <label class="control-label">Package</label>
                                    <div class="input-group mb-2">
                                        @Html.DropDownList("VendorPackageID", null, "Select Package", htmlAttributes: new { @class = "form-control", required = "required" })
                                        <div class="input-group-append"><span class="input-group-text"><i class="fa fa-home"></i></span></div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.VendorPackageID, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="col-md-4 col-sm-12">
                                <div class="form-group">
                                    <label class="control-label">Opening Time</label>
                                    <div class="input-group mb-2">
                                        @*<input type="text" class="form-control mytimepicker" id="OpeningTime" placeholder="Select Time" required />*@
                                        @Html.EditorFor(model => model.OpeningTime, new { htmlAttributes = new { @class = "form-control mytimepicker", placeholder = "Select Time ...", required = "required" } })
                                        @Html.ValidationMessageFor(model => model.OpeningTime, "", new { @class = "text-danger" })
                                        <div class="input-group-append">
                                            <span class="input-group-text">
                                                <i class="flaticon2-time"></i>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-4 col-sm-12">
                                <div class="form-group">
                                    <label class="control-label">Closing Time</label>
                                    <div class="input-group mb-2">
                                        @*<input type="text" class="form-control mytimepicker" id="ClosingTime" placeholder="Select Time" required />*@
                                        @Html.EditorFor(model => model.ClosingTime, new { htmlAttributes = new { @class = "form-control mytimepicker", placeholder = "Select Time ...", required = "required" } })
                                        @Html.ValidationMessageFor(model => model.ClosingTime, "", new { @class = "text-danger" })
                                        <div class="input-group-append">
                                            <span class="input-group-text">
                                                <i class="flaticon2-time"></i>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>


                            <div class="col-md-12 col-sm-12">
                                <h4 class="card-label">
                                    Location
                                </h4>
                                <hr />
                            </div>
                            <div class="col-md-6 col-sm-12">
                                <div class="form-group">
                                    <label class="control-label">Country</label>
                                    <div class="input-group mb-2">
                                        @Html.DropDownList("CountryID", null, "Select Country", htmlAttributes: new { @class = "form-control txtdisabled", required = "required" })
                                        <div class="input-group-append"><span class="input-group-text"><i class="fa fa-flag"></i></span></div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6 col-sm-12">
                                <div class="form-group">
                                    <label class="control-label">City</label>
                                    <div class="input-group mb-2">
                                        @Html.DropDownList("CityID", null, "Select City", htmlAttributes: new { @class = "form-control", required = "required" })
                                        <div class="input-group-append"><span class="input-group-text"><i class="fa fa-home"></i></span></div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-12 col-sm-12">
                                <div class="form-group w-100">
                                    <label class="wo-titleinput mb-0">Address</label>
                                    <div class="wo-form-icon">
                                        <input type="text" class="form-control show-map-input Address" id="Address" name="Address" placeholder="Choose location" required value="@Model.Address">
                                        <a href="javascript:void(0);" class="wo-right-icon get-current-location" onclick="getLocation()">
                                            <i class="flaticon2-map"></i>
                                        </a>
                                        <a href="javascript:void(0);" class="wo-right-icon pin-on-map" @*data-toggle="modal" data-target="#map-modal"*@ onclick="openMap()">
                                            Pin On Map
                                        </a>
                                    </div>
                                </div>
                                <div class="MapSearchResult" style="display:none">
                                </div>
                                <input type="hidden" name="Latitude" id="Latitude" value="@Model.Latitude" />
                                <input type="hidden" name="Longitude" id="Longitude" value="@Model.Longitude" />
                            </div>
                            <input type="text" class="" value="-" name="AboutAr" hidden="" />
                        </div>
                        <div>
                            <div class="form-group">
                                <label class="control-label">Social Media Managment</label>
                                <span class="switch">
                                    <label>
                                        @Html.CheckBox("IsSocialManagment")
                                        <span></span>
                                    </label>
                                </span>
                            </div>
                        </div>
                        <div id="SocialMediaSection">
                            <div class="row">
                                <div class="card-title">
                                    <h4 class="card-label">
                                        Social Media Links
                                    </h4>
                                </div>
                                <hr />

                            </div>
                            <div class="form-group row">
                                <div class="col-md-6 col-sm-12">
                                    <div class="form-group">
                                        <label class="control-label">Facebook</label>
                                        <div class="input-group mb-2">
                                            @Html.EditorFor(model => model.Facebook, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter facebook link here ..." } })
                                            <div class="input-group-append"><span class="input-group-text"><i class="flaticon-facebook-letter-logo"></i></span></div>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.Facebook, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6 col-sm-12">
                                    <div class="form-group">
                                        <label class="control-label">Twitter</label>
                                        <div class="input-group mb-2">
                                            @Html.EditorFor(model => model.Twitter, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Twitter link here ..." } })
                                            <div class="input-group-append"><span class="input-group-text"><i class="flaticon-twitter-logo-button"></i></span></div>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.Twitter, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6 col-sm-12">
                                    <div class="form-group">
                                        <label class="control-label">Instagram</label>
                                        <div class="input-group mb-2">
                                            @Html.EditorFor(model => model.Instagram, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter instagram link here ..." } })
                                            <div class="input-group-append"><span class="input-group-text"><i class="flaticon-instagram-logo"></i></span></div>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.Instagram, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6 col-sm-12">
                                    <div class="form-group">
                                        <label class="control-label">Youtube</label>
                                        <div class="input-group mb-2">
                                            @Html.EditorFor(model => model.Youtube, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter youtube link here ..." } })
                                            <div class="input-group-append"><span class="input-group-text"><i class="fa fa-play-circle"></i></span></div>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.Youtube, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6 col-sm-12">
                                    <div class="form-group">
                                        <label class="control-label">Snapchat</label>
                                        <div class="input-group mb-2">
                                            @Html.EditorFor(model => model.Snapchat, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter snapchat link here ..." } })
                                            <div class="input-group-append"><span class="input-group-text"><i class="fa fa-ghost"></i></span></div>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.Snapchat, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6 col-sm-12">
                                    <div class="form-group">
                                        <label class="control-label">LinkedIn</label>
                                        <div class="input-group mb-2">
                                            @Html.EditorFor(model => model.LinkedIn, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter linkedin link here ..." } })
                                            <div class="input-group-append"><span class="input-group-text"><i class="flaticon-linkedin-logo"></i></span></div>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.LinkedIn, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6 col-sm-12">
                                    <div class="form-group">
                                        <label class="control-label">Whatsapp</label>
                                        <div class="input-group mb-2">
                                            <div class="input-group-append"><span class="input-group-text">+971</span></div>
                                            @Html.EditorFor(model => model.Whatsapp, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter whatsapp no here ..." } })
                                            <div class="input-group-append"><span class="input-group-text"><i class="flaticon-whatsapp"></i></span></div>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.Whatsapp, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-6 col-sm-12">
                                    <div class="form-group">
                                        <label class="control-label">TikTok</label>
                                        <div class="input-group mb-2">
                                            @Html.EditorFor(model => model.TikTok, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter TikTok link here ..." } })
                                            <div class="input-group-append"><span class="input-group-text"><i class="fab fa-tiktok"></i></span></div>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.TikTok, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                       
                        <div class="row">
                            <div class="card-title">
                                <h4 class="card-label">
                                    Vendor Administrative User Credentials
                                </h4>
                            </div>
                            <hr />

                        </div>
                        <div class="form-group row">
                            <div class="col-md-6 col-sm-12">
                                <div class="form-group">
                                    <label class="control-label">User Email</label>
                                    <div class="input-group mb-2">
                                        @Html.EditorFor(model => model.UserEmail, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter email here ...", required = "required", type = "email" } })
                                        <div class="input-group-append"><span class="input-group-text"><i class="fa fa-envelope"></i></span></div>
                                    </div>

                                </div>
                            </div>
                            <div class="col-md-6 col-sm-12">
                                <div class="form-group">
                                    <label class="control-label">User Password</label>
                                    <div class="input-group">
                                        @Html.EditorFor(model => model.UserPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter password here ...", required = "required", type = "password", pattern = "^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$" } })
                                        @*, pattern = "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$"*@
                                        <div class="input-group-append"><span class="input-group-text"><i class="fa fa-lock"></i></span></div>
                                    </div>
                                    <span class="form-text text-danger" style="font-size: 9px;">Min. 8 characters, at least one uppercase letter, one lowercase letter, and one number</span>
                                    @*<span class="form-text text-danger" style="font-size: 9px;">Min. 8 characters, at least one uppercase letter, one lowercase letter, and one number</span>*@
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <!--end::Card-->
            <!--end::Dashboard-->
        </div>
        <!--end::Container-->
    </div>
    <!--end::Entry-->
</div>

<div id="myModal" class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none;">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content" style="min-height:100px">
            <div id='myModalContent'>
                <div class="row justify-content-center">
                    <div class="col-16">
                        <div class="kt-spinner kt-spinner--lg kt-spinner--dark kt-spinner-modal"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Map Modal Start -->
<div class="modal fade wo-videopopup " tabindex="-1" role="dialog" id="map-modal">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="wo-modalcontent modal-content">
            <div class="modal-body">
                <a href="javascript:void(0);" class="close"><i class="ti-close" data-dismiss="modal"></i></a>
                <div class="login-header">
                    <h4 class="text-center mb-2">Search Location</h4>
                    <p class="text-center" id="drag-map"><span>Drag marker on the map to select your desired location.</span></p>
                </div>
                <!-- Modal Body Start -->
                <div class="container">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="map-div" style="display:none">
                                <input type="text" class="form-control mb-3 Address" id="current-location" name="current-location" placeholder="Search Location" required="">
                                <div id="googleMap" style="width:100%;height:400px;"></div>
                                <button class="btn btn-block btn-theme border-radius-4 mt-3 p-3" type="button" data-dismiss="modal">Done</button>
                            </div>
                            <div class="map-div-spin p-5 m-5 text-center">
                                <span class="fa fa-circle-notch fa-spin fa-2x"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Modal Body End -->
            </div>
        </div>
    </div>
</div>
<!-- Map Modal End -->


<div class="modal fade" id="CropperModal" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document" style="max-width: 90vw;">
        <div class="modal-content">
            <div class="modal-body">
                <div class="row">

                    <div class="col-12">
                        <div class="img-container">
                            <img id="image" src="" style="width:80vw;height:80vh">
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-info" id="crop">Submit</button>
            </div>
        </div>
    </div>
</div>
<script>
	var SuccessMessage = '@ViewBag.SuccessMessage';
	var ErrorMessage = '@ViewBag.ErrorMessage';
</script>

@section IndexScript {
    <script src="~/Assets/Admin/plugins/Cropper/cropper.js"></script>
    <script src="~/Assets/Admin/js/general/ImageUploader.js"></script>
    <!--end::Page Scripts-->

    <script>
        'use strict';

        var _URL = window.URL || window.webkitURL;
        var logoPath;
       
        $(document).ready(function () {

            $('i.fa-pen').click(function () {
                $("#Logo").trigger('click');
            });

            $('i.fa-camera').click(function () {
                $("#Logo").trigger('click');
            });

            aspectratio = NaN;
            minCroppedWidth = 690;
            minCroppedHeight = 450;

            BindImageUploader("#Logo", "#image", "#CropperModal", "#PreviewImage");

            $('#Userform').submit(function () {
                
                $('#btnSave').addClass('spinner spinner-left spinner-light').prop('disabled', true);
                var data = new FormData();
                //var files = $("#Logo").get(0).files;
                //if (files.length > 0) {
                //}
                data.append("Logo", logoPath);

                data.append("VendorCode", $('#VendorCode').val());
                data.append("Name", $('#Name').val());
                data.append("Slug", $('#Slug').val());
                data.append("Email", $('#Email').val());
                //data.append("Logo", $('#Slug').val());
                data.append("PassportNo", $('#PassportNo').val());
                data.append("Contact", $('#Contact').val());
                data.append("Mobile", $('#Mobile').val());
                data.append("Address", $('#Address').val());
                data.append("IDNo", $('#IDNo').val());
                data.append("Website", $('#IDNo').val());
                data.append("TRN", $('#TRN').val());
                data.append("ClosingTime", $('#ClosingTime').val());
                data.append("OpeningTime", $('#OpeningTime').val());
                data.append("UserEmail", $('#UserEmail').val());
                data.append("UserPassword", $('#UserPassword').val());
                data.append("License", $('#License').val());
                data.append("Facebook", $('#Facebook').val());
                data.append("Instagram", $('#Instagram').val());
                data.append("Youtube", $('#Youtube').val());
                data.append("Twitter", $('#Twitter').val());
                data.append("Snapchat", $('#Snapchat').val());
                data.append("LinkedIn", $('#LinkedIn').val());
                data.append("Whatsapp", $('#Whatsapp').val());
                data.append("TikTok", $('#TikTok').val());
                data.append("CountryID", $('#CountryID').val());
                data.append("CityID", $('#CityID').val());
                data.append("VendorPackageID", $('#VendorPackageID').val());
                data.append("IsSocialManagment",$('input[name=IsSocialManagment]').prop('checked'));
                $.ajax({
                    url: "/Admin/Vendor/Create/",
                    type: "POST",
                    processData: false,
                    contentType: false,
                    data: data,
                    success: function (response) {
                        window.location.href = "/Admin/Vendor/Index";
                    },
                    error: function (er) {
                        toastr.error(er);
                    }
                });
                return false;
            });

        });

		// Class definition
		//var KTImageInputDemo = function () {
		//	// Private functions
		//	var initDemos = function () {
		//		var avatar1 = new KTImageInput('kt_image_1');
		//		var avatar2 = new KTImageInput('kt_image_2');
		//	}

		//	return {
		//		// public functions
		//		init: function () {
		//			initDemos();
		//		}
		//	};
		//}();

		KTUtil.ready(function () {
			/*KTImageInputDemo.init();*/

			$(document).ready(function () {
				$('.mytimepicker').timepicker({});
            });

			$('.mytimepicker').timepicker({
				timeFormat: 'h:mm p',
				interval: 60,
				minTime: '10',
				maxTime: '6:00pm',
				defaultTime: '11',
				startTime: '10:00',
				dynamic: false,
				dropdown: true,
				scrollbar: true
			});

			$('#CountryID').change(function () {
				var count = 0;
				var $dropdown = $("#CityID");
				if ($(this).val() == 0) {
					$dropdown.empty();
					$dropdown.append($("<option />").val('').text("Please Select Country First!"));
				}
				else {
					$.ajax({
						type: 'Get',
						url: '/Admin/City/GetCitiesByCountry/' + $(this).val(),
						success: function (response) {
							$dropdown.empty();
							$dropdown.append($("<option />").val('').text("Select City"));

							$.each(response.data, function (k, v) {
								$dropdown.append($("<option />").val(v.value).text(v.text));
								count++;
							});
						}
					});
				}
            });
            $('#IsSocialManagment').change(function () {
                if ($('input[name=IsSocialManagment]').prop('checked') == false) {
                    $('#SocialMediaSection').attr("hidden", "hidden")
                }
                else {
                    $('#SocialMediaSection').removeAttr("hidden", "hidden")
                }
            })
             $('#Whatsapp').keypress(function() {
            if (this.value.length >= 9) {
                return false;
            }
        });
            var model = '@Model';

            if (model == '') {
                $("#CountryID").trigger("change");
            }

			$("#Name").on('change', function () {
				var name = $(this);
				$("#Slug").val($(name).val().replace(/ /g, "-").toLocaleLowerCase());
			});
		});


		//var _URL = window.URL || window.webkitURL;
		//$("#cover").change(function (e) {

		//	var file, img;


		//	if ((file = this.files[0])) {

		//		img = new Image();
		//		img.onload = function () {


		//			if (this.width < 1920) {
		//				Swal.fire({
		//					icon: 'error',
		//					title: 'Oops...',
		//					text: 'Image dimension should be greater than 1920x316!',

		//				}).then(function (result) {
		//					$("#cover").attr("src", "/Assets/AppFiles/Images/default.png");
		//					$(".cancelimage").trigger('click');
		//				});
		//			}
		//			else if (this.height < 316) {
		//				Swal.fire({
		//					icon: 'error',
		//					title: 'Oops...',
		//					text: 'Image dimension should be greater than 1920x316!',

		//				}).then(function (result) {
		//					$("#cover").attr("src", "/Assets/AppFiles/Images/default.png");
		//					$(".cancelimage").trigger('click');
		//				});
		//			}
		//			else {
		//				img.onerror = function () {
		//					alert("not a valid file: " + file.type);
		//				};
		//			}
		//		};
		//		img.src = _URL.createObjectURL(file);
		//	}
		//});

		//Image Validation Begin
		//$("#Logo").change(function (e) {


		//	var file, img;

		//	if ((file = this.files[0])) {

		//		img = new Image();
		//		img.onload = function () {

		//			if (this.width < 690 || this.width > 690) {
		//				Swal.fire({
		//					icon: 'error',
		//					title: 'Oops...',
		//					text: 'Image dimension should be 690 x 460 !',

		//				}).then(function (result) {
		//					$("#Logo").attr("src", "/Assets/AppFiles/Images/default.png");
		//					$(".cancelimage").trigger('click');
		//				});
		//			}
		//			else if (this.height < 460 || this.height > 460) {
		//				Swal.fire({
		//					icon: 'error',
		//					title: 'Oops...',
		//					text: 'Image dimension should be 690 x 460 !',

		//				}).then(function (result) {
		//					$("#Logo").attr("src", "/Assets/AppFiles/Images/default.png");
		//					$(".cancelimage").trigger('click');
		//				});
		//			}
		//			else if (this.size > 50000) {
		//				Swal.fire({
		//					icon: 'error',
		//					title: 'Oops...',
		//					text: 'Image size must be less than 50 kb!',

		//				}).then(function (result) {
		//					$("#Logo").attr("src", "/Assets/AppFiles/Images/default.png");
		//					$(".cancelimage").trigger('click');
		//				});
		//			}
		//			else {
		//				img.onerror = function () {
		//					alert("not a valid file: " + file.type);
		//				};
		//			}
		//		};
		//		img.src = _URL.createObjectURL(file);
		//	}
		//});
		//Image Validation End


		if (SuccessMessage) {
			toastr.success(SuccessMessage);
		}
		else if (ErrorMessage) {
			toastr.error(ErrorMessage);
		}

        $("#IDNo").mask("999-9999-9999999-9");
    </script>

    <script src="~/Assets/Admin/js/general/Map.js"></script>

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAEmhLaFjth5xau57Gy1NwE1O6apk443xY&callback=initMap&libraries=places&callback=initAutocomplete"></script>

}